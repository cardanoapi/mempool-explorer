stages:
    - build
    - deploy
services:
  - dind
build:
    stage: build
    image: docker
    script:
        - docker info
        - if [ ! -z "$CI_COMMIT_TAG" ]; then COMMON_TAG="release";  elif [ "$CI_COMMIT_REF_NAME" == "master" ]; then COMMON_TAG="latest"; else COMMON_TAG=$CI_COMMIT_REF_SLUG; fi
        - if [ ! -z "$CI_COMMIT_TAG" ]; then IMAGE_IDENTIFIER="$CI_COMMIT_TAG"; else IMAGE_IDENTIFIER=$CI_COMMIT_SHA; fi
        - cd client && docker build -t "$CI_REGISTRY_IMAGE:$IMAGE_IDENTIFIER" -t "$CI_REGISTRY_IMAGE:$COMMON_TAG" .
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker push $CI_REGISTRY_IMAGE:$IMAGE_IDENTIFIER
        - docker push $CI_REGISTRY_IMAGE:$COMMON_TAG

deploy-dev:
    stage: deploy
    image: docker:latest
    only:
        refs:
          - develop
    script:
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker --host 172.31.0.6:2376 service update --with-registry-auth --image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA  kuber_dev_mempool-explorer-webapp

deploy-release:
    stage: deploy
    image: docker:latest
    only:
        - tags
    script:
        - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
        - docker --host 172.31.0.7:2376 service update --with-registry-auth --image $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG  cardanoapi_mempool-explorer-webapp
